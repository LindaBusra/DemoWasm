@page "/todo"


<h2>Todo Siden</h2>

@*Input felt som binder data toveis mellom komponent og C# field newTodo *@
<input @bind="newTodo" class= "form-control" placeholder = "Enter a new todo.." @onkeydown="HandleEnter"/>
<button class="btn btn-primary mt-2" @onclick = "AddTodo">Legg til gjøremål</button>

@* Liste over gjøremål. For hvert gjøremål vises knapper for å markere som fullført eller slette. *@
<ul class="list-group">
    @foreach(var todo in todos)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span style ="text-decoration: @(todo.isCompleted ? "line-through" : "none");">   <!-- hvis den er fullført, kommer en line over teksten -->
                @todo.Title
            </span>

        <div>
            <button class="btn btn-success btn-sm" @onclick = "() => ToogleComplete(todo)">
                @(todo.isCompleted ? "Gjør ufullført" : "Marker som fullført")
            </button>
            <button class="btn btn-danger btn-sm" @onclick = "() => DeleteTodo(todo)">
                Delete
            </button>
        </div>
       </li>
    }
</ul>
<br><br>


@*Liste over fullførte gjøremål *@
<h2>Fullførte gjøremål</h2>
<ul class="list-group">
    @foreach(var todo in todos.Where(t=> t.isCompleted))   
    {
        <li class="list-group-item d-flex justify-content-between align-items-left">
                @todo.Title
       </li>
    }
</ul>


@code {
    private string newTodo = string.Empty;
    private List<TodoItem> todos = new();

    #region Livssyklus i blazor
    protected override void OnInitialized()                     
    {
        Console.WriteLine("On initialized");            // Kjører når komponenten først blir initialisert
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender){                                // Kjører etter den første renderingen av komponenten.
            Console.WriteLine("First Render!");
        }
    }


    public void Dispose()
    {
        Console.WriteLine("Dispose!");                  // Kjører når komponenten ødelegges.
    }
    #endregion


    private void AddTodo()
    {
        Console.WriteLine("Add Todo Called!..");
        if(!string.IsNullOrWhiteSpace(newTodo))         // Legger til et nytt gjøremål hvis tekstfeltet ikke er tomt.
        {
            todos.Add(new TodoItem {Title = newTodo});
            newTodo = string.Empty;                     // Tøm inputfeltet etter å legge til et gjøremål
        }
    }    

    private void ToogleComplete(TodoItem todo){
        todo.isCompleted = !todo.isCompleted;           // Endrer gjøremålets fullført-status
    }


    private void DeleteTodo(TodoItem todo){
        todos.Remove(todo);                             // Fjerner gjøremål fra listen
    }



    public void HandleEnter(KeyboardEventArgs e)
    {
            if(e.Key == "Enter"){
                    AddTodo();                      // Legger til gjøremål når brukeren trykker Enter
                    
            }            
    }

    private class TodoItem
    {
        public string Title {get; set;} = string.Empty;
        public bool isCompleted {get; set;} = false;
    }
}

